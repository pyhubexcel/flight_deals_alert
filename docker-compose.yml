version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Java123
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Java123
      POSTGRES_DB: blaise_test
    ports:
      - "5435:5432"
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 20s

  redis:
    image: redis:6
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 20s

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:Java123@db:5432/blaise_test
      DATABASE_URL: postgresql://postgres:Java123@db:5432/blaise_test
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: >
      sh -c "
      alembic upgrade head &&
      uvicorn app.routes:app1 --host 0.0.0.0 --port 8088
      "
    ports:
      - "8088:8088"
    depends_on:
      - db
      - redis
    networks:
      - backend
    user: "1000:1000"  

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.routes worker --concurrency=10 --loglevel=info -Q app_queue
    environment:
      DATABASE_URL: postgresql://postgres:Java123@db:5432/blaise_test
      DATABASE_URL: postgresql://postgres:Java123@db:5432/blaise_test
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - backend
    user: "1000:1000" 

volumes:
  postgres_data:
    driver: local

networks:
  backend:
